@model Shop.Data.Cart
@{
    ViewData["Title"] = "Payment";
}


<div id="mainBody">
    <form method="post" asp-action="Payment">
        <input hidden asp-for="Id" class="hidden" />
        <div class="container">
            <div class="row">
                <!-- Sidebar ================================================== -->
                <div id="sidebar" class="span3">
                    @await Component.InvokeAsync("Cart")
                    @await Component.InvokeAsync("Category")
                    <br />
                    @await Component.InvokeAsync("LastestProduct")
                </div>
                <!-- Sidebar end=============================================== -->
                <div class="span9" id="mainCol">
                    <ul class="breadcrumb">
                        <li><a href="index.html">Home</a> <span class="divider">/</span></li>
                        <li class="active">Page Title</li>
                    </ul>
                    <h3> My carts</h3>
                    @*<hr class="soft" />*@

                    <table class="table" style="margin-top:20px">
                        <tbody>
                            <tr>
                                <td>
                                    <div style="margin-top:30px">
                                        <div class="form-group">
                                            <label asp-for="CustomerName"></label>
                                            <input asp-for="CustomerName" class="form-control" style="width:100%" />
                                        </div>
                                        <div class="form-group">
                                            <label asp-for="CustomerEmail"></label>
                                            <input asp-for="CustomerEmail" class="form-control" style="width:100%" />
                                        </div>
                                        <div class="form-group">
                                            <label asp-for="CustomerPhoneNumber"></label>
                                            <input asp-for="CustomerPhoneNumber" class="form-control" style="width:100%" />
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <div class="form-group" style="margin-top:30px">
                                        <label asp-for="CustomerAddress"></label>
                                        <textarea asp-for="CustomerAddress" class="form-control" rows="8" style="width:100%"></textarea>
                                    </div>
                                </td>
                            </tr>

                        </tbody>
                    </table>

                    <table class="table table-bordered table-hover table-responsive">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>Product name</th>
                                <th>Order date</th>
                                <th>Quantity</th>
                                <th>Total price</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{ int i = 1;}
                            @foreach (var item in Model.Orders.Where(x => x.Buy == true))
                            {
                                <tr id="order-row-@item.Id">
                                    <td class="col-md-1" style="text-align:center">
                                        @(i++)
                                    </td>
                                    <td class="col-md-6">@item.Product.Name</td>
                                    <td class="col-md-3">#</td>
                                    <td class="col-md-1" style="text-align:center">
                                        <div class="input-group">
                                            <input readonly style="width:30px;margin-bottom:0px;text-align:center" type="text" name="quant[@item.Id]" class="form-control input-number" data-id="@item.Id" value="@item.Quantity" min="1" max="100">
                                        </div>
                                    </td>
                                    <td class="col-md-1">
                                        <span id="total-price-@item.Id">
                                            @item.TotalPriceCurency()
                                        </span>
                                    </td>
                                </tr>
                            }
                            <tr>
                                <th class="col-md-11" colspan="4">
                                    Total prices
                                </th>
                                <th class="col-md-1" colspan="1">
                                    <span id="total-prices">
                                        @Model.TotalPriceCurency()
                                    </span>
                                </th>
                            </tr>
                        </tbody>
                    </table>
                    <button class="btn btn-success pull-right btn-lg" type="submit">Comfirm</button>
                </div>
            </div>
        </div>
    </form>
</div>

@section scripts{
    <script>
        $(document).ready(function () {

            $('.SelectPay').on('click', function () {
                //alert($(this).is(":checked"));
                //alert($(this).data('id'));

                var value = $(this).is(":checked");
                var id = $(this).val();

                $.post('/User/SelectOrder', { id: id, val: value }, function (res) {
                    $('#total-prices').text(res);
                })
            });
            $('#remove-order').on('click', function () {
                var items = $('input[name="SelectPay"]:checked');
                var ids = "";
                $.each(items, function (index, item) {
                    var id = $(item).val();
                    ids += (id + ' ');
                });
                $.post('/User/DeleteOrder', { ids: ids }, function (res) {
                    $('#total-prices').text(res.totalPrices);
                    var _ids = ids.split(" ");
                    $.each(_ids, function (index, item) {
                        $('#order-row-' + item).remove();
                    });
                });
            });
            $('.input-number').on('change', function () {

                var value = $(this).val();
                var id = $(this).data('id');

                $.post('/User/ChangeQuantity', { id: id, val: value }, function (res) {
                    $('#total-prices').text(res.totalPrices);
                    $('#total-price-' + id).text(res.totalPrice);
                });
            })

            //plugin bootstrap minus and plus
            //http://jsfiddle.net/laelitenetwork/puJ6G/
            $('.btn-number').click(function (e) {
                e.preventDefault();

                fieldName = $(this).attr('data-field');
                type = $(this).attr('data-type');
                var input = $("input[name='" + fieldName + "']");
                var currentVal = parseInt(input.val());
                if (!isNaN(currentVal)) {
                    if (type == 'minus') {

                        if (currentVal > input.attr('min')) {
                            input.val(currentVal - 1).change();
                        }
                        if (parseInt(input.val()) == input.attr('min')) {
                            $(this).attr('disabled', true);
                        }

                    } else if (type == 'plus') {

                        if (currentVal < input.attr('max')) {
                            input.val(currentVal + 1).change();
                        }
                        if (parseInt(input.val()) == input.attr('max')) {
                            $(this).attr('disabled', true);
                        }

                    }
                } else {
                    input.val(0);
                }
            });
            $('.input-number').focusin(function () {
                $(this).data('oldValue', $(this).val());
            });
            $('.input-number').change(function () {

                minValue = parseInt($(this).attr('min'));
                maxValue = parseInt($(this).attr('max'));
                valueCurrent = parseInt($(this).val());

                name = $(this).attr('name');
                if (valueCurrent >= minValue) {
                    $(".btn-number[data-type='minus'][data-field='" + name + "']").removeAttr('disabled')
                } else {
                    alert('Sorry, the minimum value was reached');
                    $(this).val($(this).data('oldValue'));
                }
                if (valueCurrent <= maxValue) {
                    $(".btn-number[data-type='plus'][data-field='" + name + "']").removeAttr('disabled')
                } else {
                    alert('Sorry, the maximum value was reached');
                    $(this).val($(this).data('oldValue'));
                }


            });
            $(".input-number").keydown(function (e) {
                // Allow: backspace, delete, tab, escape, enter and .
                if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 190]) !== -1 ||
                    // Allow: Ctrl+A
                    (e.keyCode == 65 && e.ctrlKey === true) ||
                    // Allow: home, end, left, right
                    (e.keyCode >= 35 && e.keyCode <= 39)) {
                    // let it happen, don't do anything
                    return;
                }
                // Ensure that it is a number and stop the keypress
                if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                    e.preventDefault();
                }
            });
        })
    </script>
}